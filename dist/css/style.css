/*! destyle.css v3.0.2 | MIT License | https://github.com/nicolas-cusan/destyle.css */

/* Reset box-model and set borders */

/* ============================================ */

*,
::before,
::after {
	box-sizing: border-box;
	border-width: 0;
	border-style: solid;
}

/* Document */

/* ============================================ */

/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 * 3. Remove gray overlay on links for iOS.
 */

html { /* 1 */
	-webkit-text-size-adjust: 100%;
	-moz-text-size-adjust: 100%;
	text-size-adjust: 100%; /* 2 */
	-webkit-tap-highlight-color: transparent;
	line-height: 1.15; /* 3 */
}

/* Sections */

/* ============================================ */

/**
 * Remove the margin in all browsers.
 */

body {
	margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */

main {
	display: block;
}

/* Vertical rhythm */

/* ============================================ */

p,
table,
blockquote,
address,
pre,
iframe,
form,
figure,
dl {
	margin: 0;
}

/* Headings */

/* ============================================ */

h1,
h2,
h3,
h4,
h5,
h6 {
	margin: 0;
	font-weight: inherit;
	font-size: inherit;
}

/* Lists (enumeration) */

/* ============================================ */

ul,
ol {
	margin: 0;
	padding: 0;
	list-style: none;
}

/* Lists (definition) */

/* ============================================ */

dt {
	font-weight: bold;
}

dd {
	margin-left: 0;
}

/* Grouping content */

/* ============================================ */

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */

hr {
	box-sizing: content-box; /* 1 */
	height: 0; /* 1 */
	margin: 0; /* 2 */
	clear: both;
	overflow: visible;
	border-top-width: 1px;
	color: inherit;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

pre { /* 1 */
	font-size: inherit;
	font-family: monospace, monospace; /* 2 */
}

address {
	font-style: inherit;
}

/* Text-level semantics */

/* ============================================ */

/**
 * Remove the gray background on active links in IE 10.
 */

a {
	background-color: transparent;
	color: inherit;
	text-decoration: none;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */

abbr[title] {
	-webkit-text-decoration: underline dotted;
	text-decoration: underline dotted; /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */

b,
strong {
	font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

code,
kbd,
samp { /* 1 */
	font-size: inherit;
	font-family: monospace, monospace; /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */

small {
	font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */

sub,
sup {
	position: relative;
	font-size: 75%;
	line-height: 0;
	vertical-align: baseline;
}

sub {
	bottom: -0.25em;
}

sup {
	top: -0.5em;
}

/* Replaced content */

/* ============================================ */

/**
 * Prevent vertical alignment issues.
 */

svg,
img,
embed,
object,
iframe {
	vertical-align: bottom;
}

/* Forms */

/* ============================================ */

/**
 * Reset form fields to make them styleable.
 * 1. Make form elements stylable across systems iOS especially.
 * 2. Inherit text-transform from parent.
 */

button,
input,
optgroup,
select,
textarea {
	-webkit-appearance: none;
	appearance: none; /* 1 */
	appearance: none;
	margin: 0;
	padding: 0;
	border-radius: 0;
	background: transparent;
	color: inherit;
	font: inherit;
	text-align: inherit;
	text-transform: inherit; /* 2 */
	vertical-align: middle;
}

/**
 * Reset radio and checkbox appearance to preserve their look in iOS.
 */

[type=checkbox] {
	-webkit-appearance: checkbox;
	appearance: checkbox;
	appearance: checkbox;
}

[type=radio] {
	-webkit-appearance: radio;
	appearance: radio;
	appearance: radio;
}

/**
 * Correct cursors for clickable elements.
 */

button,
[type=button],
[type=reset],
[type=submit] {
	cursor: pointer;
}

button:disabled,
[type=button]:disabled,
[type=reset]:disabled,
[type=submit]:disabled {
	cursor: default;
}

/**
 * Improve outlines for Firefox and unify style with input elements & buttons.
 */

:-moz-focusring {
	outline: auto;
}

select:disabled {
	opacity: inherit;
}

/**
 * Remove padding
 */

option {
	padding: 0;
}

/**
 * Reset to invisible
 */

fieldset {
	min-width: 0;
	margin: 0;
	padding: 0;
}

legend {
	padding: 0;
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */

progress {
	vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */

textarea {
	overflow: auto;
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */

[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
	height: auto;
}

/**
 * 1. Correct the outline style in Safari.
 */

[type=search] {
	outline-offset: -2px; /* 1 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */

[type=search]::-webkit-search-decoration {
	-webkit-appearance: none;
	appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Fix font inheritance.
 */

::-webkit-file-upload-button {
	-webkit-appearance: button;
	appearance: button; /* 1 */
	font: inherit; /* 2 */
}

/**
 * Clickable labels
 */

label[for] {
	cursor: pointer;
}

/* Interactive */

/* ============================================ */

/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */

details {
	display: block;
}

/*
 * Add the correct display in all browsers.
 */

summary {
	display: list-item;
}

/*
 * Remove outline for editable content.
 */

[contenteditable]:focus {
	outline: auto;
}

/* Tables */

/* ============================================ */

/**
1. Correct table border color inheritance in all Chrome and Safari.
*/

table {
	border-color: inherit;
	border-collapse: collapse; /* 1 */
}

caption {
	text-align: left;
}

td,
th {
	padding: 0;
	vertical-align: top;
}

th {
	font-weight: bold;
	text-align: left;
}

/**
 * base
 */

html {
	width: 100%;
	height: 100%;
}

body {
	-webkit-font-feature-settings: "palt";
	font-feature-settings: "palt";
	position: relative;
	width: 1920px;
	max-width: 100%;
	margin-right: auto;
	margin-left: auto;
	overflow-x: hidden;
	color: #333;
	line-height: 1.5;
	font-family: "Helvetica Neue", arial, "Hiragino Sans", "Hiragino Kaku Gothic ProN", "BIZ UDPGothic", meiryo, sans-serif;
}

img {
	max-width: 100%;
	height: auto;
}

/**
 * l-wrapper
 */

.l-wrapper {
	display: flex;
	flex-direction: column;
	min-height: 100vh;
}

.l-wrapper > main {
	flex: 1;
	overflow-x: hidden;
}

/**
 * l-header
 */

.l-header {
	padding: 20px 0;
}

.l-header__inner {
	display: grid;
	place-items: center;
	width: min(100% - 80px, 1280px);
	margin-inline: auto;
}

.l-header__title {
	font-size: 2.5rem;
	text-align: center;
}

.l-header__nav {
	display: flex;
	align-items: center;
	justify-content: space-between;
	margin-top: 20px;
}

.l-header__nav-item + .l-header__nav-item {
	margin-left: 40px;
}

/**
 * l-hero
 */

.l-hero {
	min-height: calc(var(--vh, 1vh) * 100);
}

/**
 * l-main
 */

.l-main {
	padding-top: 40px;
	padding-bottom: 40px;
}

/**
 * l-footer
 */

.l-footer {
	padding-top: 20px;
	padding-bottom: 20px;
}

.l-footer__text {
	text-align: center;
}

/**
 * c-title
 */

.c-title {
	position: relative;
	padding-left: 100px;
	font-family: "Roboto", "Montserrat";
}

.c-title::before {
	-webkit-transform: translateY(-50%);
	display: inline-block;
	position: absolute;
	top: 50%;
	left: 0;
	transform: translateY(-50%);
	content: attr(data-number);
	color: currentcolor;
}

.c-title::after {
	-webkit-transform: translateY(-50%);
	display: inline-block;
	position: absolute;
	top: 50%;
	left: 33px;
	width: fib(10);
	height: 1px;
	transform: translateY(-50%);
	background-color: #0000b3;
	content: "";
}

/**
 * c-btn
 */

/**
 * c-card
 */

/**
 * c-ex-link
 */

/**
 * p-index-fv
 */

.p-index-fv__visual source,
.p-index-fv__visual img {
	display: block;
	width: 640px;
	max-width: 100%;
	margin-right: auto;
	margin-left: auto;
}

/**
 * u-text-link
 */

/**
 * u-uppercase
 */

.u-uppercase {
	text-transform: uppercase;
}

/**
 * u-visibility-hidden
 */

.u-visibility-hidden {
	clip: rect(0 0 0 0);
	-webkit-clip-path: inset(50%);
	position: absolute;
	width: 1px;
	height: 1px;
	overflow: hidden;
	white-space: nowrap;
	clip-path: inset(50%);
}

/**
 * swiper
 */


/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
